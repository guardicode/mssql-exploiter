from pathlib import PureWindowsPath
from unittest.mock import MagicMock

import pytest
from mssql_exploiter.mssql_command_builder import (
    build_mssql_agent_download_command,
    build_mssql_agent_launch_command,
)
from agentpluginapi import IWindowsAgentCommandBuilder

AGENT_DESTINATION_PATH = PureWindowsPath("C:\\agent.exe")
EXPECTED_DOWNLOAD_COMMAND = "xp_cmdshell 'MSSQL_DOWNLOAD_AGENT_COMMAND'"
EXPECTED_RUN_COMMAND = "xp_cmdshell 'MSSQL_RUN_AGENT_COMMAND'"


@pytest.fixture
def windows_agent_command_builder() -> IWindowsAgentCommandBuilder:
    mock_command_builder = MagicMock(spec=IWindowsAgentCommandBuilder)
    return mock_command_builder


def test_download_command(windows_agent_command_builder: IWindowsAgentCommandBuilder):
    windows_agent_command_builder.get_command.return_value = (  # type:ignore [attr-defined]
        "MSSQL_DOWNLOAD_AGENT_COMMAND"
    )
    actual_command = build_mssql_agent_download_command(
        "http://download.me/", AGENT_DESTINATION_PATH, windows_agent_command_builder
    )

    windows_agent_command_builder.reset_command.assert_called_once()
    windows_agent_command_builder.get_command.assert_called_once()
    assert actual_command == EXPECTED_DOWNLOAD_COMMAND


def test_launch_command(windows_agent_command_builder: IWindowsAgentCommandBuilder):
    windows_agent_command_builder.get_command.return_value = (  # type:ignore [attr-defined]
        "MSSQL_RUN_AGENT_COMMAND"
    )
    actual_command = build_mssql_agent_launch_command(
        AGENT_DESTINATION_PATH, windows_agent_command_builder
    )

    windows_agent_command_builder.reset_command.assert_called_once()
    windows_agent_command_builder.get_command.assert_called_once()
    assert actual_command == EXPECTED_RUN_COMMAND
